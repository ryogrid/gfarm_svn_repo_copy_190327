#! /bin/sh
#
# External script for gfarm-zabbix.
#
# This script is assumed to be executed on gfsd hosts.
# It tries executing 'gfhost' to check whether it can connect with
# other gfsd servers and succeeds in authentication.
#

. @ZABBIX_EXTSCRIPTDIR@/gfarm_utils.inc

#
# Parse command line arguments.
#

#
# Read a configuration file
#
CONF_FILE=@ZABBIX_EXTSCRIPTDIR@/gfarm_conf.inc
[ -f $CONF_FILE ] && . $CONF_FILE

#
# Create temporary files
#
outfile1=/tmp/gfarm_gfsd_gfhost.out1.$$
outfile2=/tmp/gfarm_gfsd_gfhost.out2.$$
errfile=/tmp/gfarm_gfsd_gfhost.err.$$
trap "rm -f $outfile1 $outfile2 $errfile; log_err 'killed'; exit 1" 1 2 3 15
rm -f $outfile1 $outfile2 $errfile

#
# Execute 'gfsched' to get a list of running 'gfsd'.
#
GFCMD="@GFARM_BINDIR@/gfsched -M"
@GFARM_BINDIR@/gfservice-timeout $TIMEOUT $GFCMD > $outfile1 2> $errfile
GFCMD_EXITCODE=$?
if [ $GFCMD_EXITCODE -ne 0 ]; then
    # We ignore the execution failure itself, since too many alerts will
    # be triggered if each file system node reports the failure.
    echo "ok"
    if [ $GFCMD_EXITCODE -eq $TIMEOUT_EXITCODE ]; then
        log_warning "'$GFCMD' failed, timeout"
    else
        log_warning "'$GFCMD' failed with the exit code $GFCMD_EXITCODE"
    fi
    [ -s $errfile ] && head -1 $errfile | log_err
    rm -f $outfile1 $outfile2 $errfile
    exit 0
fi

#
# Check whether 'gfsched' outputs a list of servers correctly.
#
if [ ! -s $outfile1 ]; then
    echo "ok"
    log_warning "'$GFCMD' outputs no data"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile1 $outfile2 $errfile
    exit 0
fi

#
# Execute 'gfhost'.
#
rm -f $errfile
GFCMD="@GFARM_BINDIR@/gfhost -lv"
sudo -n -u _gfarmfs @GFARM_BINDIR@/gfservice-timeout $TIMEOUT \
    $GFCMD `cat $outfile1` > $outfile2 2> $errfile
GFCMD_EXITCODE=$?
if [ $GFCMD_EXITCODE -eq $TIMEOUT_EXITCODE ]; then
    echo "ok"
    log_warning "'$GFCMD' failed, timeout"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile1 $outfile2 $errfile
    exit 0
elif [ $GFCMD_EXITCODE -ne 0 ]; then
    # We ignore the execution failure itself, since too many alerts will
    # be triggered if each file system node reports the failure.
    echo "ok"
    log_warning "'$GFCMD' failed with the exit code $GFCMD_EXITCODE"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile1 $outfile2 $errfile
    exit 0
fi

#
# Check whether 'gfhost' outputs a list of servers correctly.
#
if [ ! -s $outfile2 ]; then
    echo "ok"
    log_warning "'$GFCMD' outputs no data"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile1 $outfile2 $errfile
    exit 0
fi

#
# Check the result data of 'gfhost'.
#
awk '
BEGIN {
    auth_fail_gfsds = ""
}
{
    if ($2 == "x") {
        if (auth_fail_gfsds == "")
            auth_fail_gfsds = $5
        else
            auth_fail_gfsds = auth_fail_gfsds ", " $5
    }
} END {
    if (auth_fail_gfsds != "")
        print "auth failed: " auth_fail_gfsds
    else
        print "ok"
}' $outfile2

rm -f $outfile1 $outfile2 $errfile
exit 0
