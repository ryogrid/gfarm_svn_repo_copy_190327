#! /bin/sh

######################################################################
TESTID="FT1-2-2-1"
CATEGORY="accident causes no failover"
SECTION="mds accident"
TITLE="DB down"
######################################################################

. ./FT-common

ft_setup()
{
	return $FT_RESULT_PASS
}

ft_main()
{
	RESULT=$FT_RESULT_PASS

	$gfservice stop-backend-db gfmd1 \
		|| RESULT=$FT_RESULT_FAIL
	ft_checkpoint 1 "stop backend DB on $gfmd1" $RESULT
	[ $RESULT -eq $FT_RESULT_PASS ] || return $RESULT

	ft_check_mails \
		"PostgreSQL is not running on $gfmd1" \
		"Database access is failed on $gfmd1 numbackends" \
		"Database access is failed on $gfmd1 tx_commited" \
		"Database access is failed on $gfmd1 tx_rolledback"
	[ $? -eq 0 ] || RESULT=$FT_RESULT_FAIL
	ft_checkpoint 2 "receive a mail" $RESULT
	[ $RESULT -eq $FT_RESULT_PASS ] || return $RESULT
	ft_truncate_mbox

	$gfservice start-backend-db gfmd1 \
		|| RESULT=$FT_RESULT_FAIL
	ft_checkpoint 3 "start gfmd on $gfmd1" $RESULT
	[ $RESULT -eq $FT_RESULT_PASS ] || return $RESULT

	ft_check_mails \
		"Re: PostgreSQL is not running on $gfmd1" \
		"Re: Database access is failed on $gfmd1 numbackends" \
		"Re: Database access is failed on $gfmd1 tx_commited" \
		"Re: Database access is failed on $gfmd1 tx_rolledback"
	[ $? -eq 0 ] || RESULT=$FT_RESULT_FAIL
	ft_checkpoint 4 "receive a mail" $RESULT
	[ $RESULT -eq $FT_RESULT_PASS ] || return $RESULT
	ft_truncate_mbox

	return $RESULT
}

ft_teardown()
{
	$gfservice start-gfmd gfmd1
	return $FT_RESULT_PASS
}
	
ft_run "$TESTID" "$TITLE"
