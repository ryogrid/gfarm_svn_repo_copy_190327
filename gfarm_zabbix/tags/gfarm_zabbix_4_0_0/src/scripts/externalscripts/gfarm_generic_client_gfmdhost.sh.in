#!/bin/sh
#
# External script for gfarm-zabbix.
#
# This script is assumed to be executed on generic client hosts.
# It tries executing 'gfmdhost' to check whether it can connect with
# the master gfmd and succeeds in authentication.
#

. @ZABBIX_EXTSCRIPTDIR@/gfarm_utils.inc

#
# Parse command line arguments.
#

#
# Read a configuration file
#
CONF_FILE=@ZABBIX_EXTSCRIPTDIR@/gfarm_conf.inc
[ -f $CONF_FILE ] && . $CONF_FILE

#
# Create temporary files
#
outfile=/tmp/gfarm_generic_client_gfmdhost.out.$$
errfile=/tmp/gfarm_generic_client_gfmdhost.err.$$
trap "rm -f $outfile $errfile; log_err 'killed'; exit 1" 1 2 3 15
rm -f $outfile $errfile

#
# Execute 'gfmdhost'.
#
GFCMD="@GFARM_BINDIR@/gfmdhost -l"
@GFARM_BINDIR@/gfservice-timeout $TIMEOUT $GFCMD > $outfile 2> $errfile
GFCMD_EXITCODE=$?
if [ $GFCMD_EXITCODE -eq $TIMEOUT_EXITCODE ]; then
    # We ignore timeout, since too many alerts will be triggered
    # if each generic clients report it.
    echo "ok"
    log_warning "'$GFCMD' failed, timeout"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile $errfile
    exit 0
elif [ $GFCMD_EXITCODE -ne 0 ]; then
    echo "'$GFCMD' failed"
    log_err "'$GFCMD' failed with the exit code $GFCMD_EXITCODE"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile $errfile
    exit 0
fi

#
# Check whether 'gfmdhost' outputs something.
#
if [ ! -s $outfile ]; then
    echo "ok"
    log_warning "'$GFCMD' outputs no data"
    [ -s $errfile ] && head -1 $errfile | log_warning
    rm -f $outfile $errfile
    exit 0
fi

echo "ok"
rm -f $outfile $errfile
exit 0
