#!/bin/sh
#
# $Id: config-gfarm.in 2140 2005-09-08 20:04:40Z  $

[ ${DEBUG:="off"} = off ] || set -xu

PROGNAME=`basename $0`

usage()
{
	echo 1>&2 "usage: $PROGNAME [--prefix prefix] [-t] [-f]"
	echo 1>&2 "        [-d domain_name] [-h hostname]"
	echo 1>&2 "        [-V openldap_version] [-l metadata_directory]"
	echo 1>&2 "        [-p slapd_port] [-s gfsd_port] [-m gfmd_port]"
	exit 1
}

ABORT()
{
	[ $# -gt 0 ] && echo 1>&2 $*
	echo "$PROGNAME failure"
	exit 1
}

display_params()
{
	echo "prefix [--prefix]: $CONFIG_PREFIX"
	echo "domain name  [-d]: $DOMAIN_NAME"
	echo "openldap version    [-V]: $OPENLDAP_VERSION"
	echo "metadata directory  [-l]: $LDAP_DATADIRECTORY"
	echo "metaserver hostname [-h]: $SLAPD_HOSTNAME"
	echo "slapd port [-p]: $SLAPD_PORT"
	echo "gfmd port  [-m]: $GFMD_PORT"
	echo "gfsd port  [-s]: $GFSD_PORT"
	echo 'slapd DB type ($SLAPD_DB): ' "$SLAPD_DB"
	exit 0
}

# default value

: ${CONFIG_PREFIX:=}
: ${DOMAIN_NAME:=`dnsdomainname`}
[ X$DOMAIN_NAME = X ] && ABORT

: ${OPENLDAP_VERSION:="2.1"}
: ${OPENLDAP_LIBEXEC:="/usr/sbin"}
: ${OPENLDAP_ETC:="/etc/openldap"}

: ${SLAPD_HOSTNAME:="`hostname -f`"}
: ${SLAPD_PORT:="389"}
[ X$SLAPD_HOSTNAME = X ] && ABORT

: ${GFMD_PORT:="601"}
: ${GFSD_PORT:="600"}

: ${FORCE:="0"}
: ${DISPLAY_PARAMS:="0"}

while [ $# -gt 0 ] ; do
	case $1 in
	  --prefix) shift; [ $# -ge 1 ] || usage
		CONFIG_PREFIX=$1
		;;
	  -d) shift; [ $# -ge 1 ] || usage
		DOMAIN_NAME=$1
		;;
	  -f)
		FORCE=1
		;;
	  -l) shift; [ $# -ge 1 ] || usage
		LDAP_DATADIRECTORY=$1
		;;
	  -m) shift; [ $# -ge 1 ] || usage
		GFMD_PORT=$1
		;;
	  -h) shift; [ $# -ge 1 ] || usage
		SLAPD_HOSTNAME=$1
		;;
	  -p) shift; [ $# -ge 1 ] || usage
		SLAPD_PORT=$1
		;;
	  -s) shift; [ $# -ge 1 ] || usage
		GFSD_PORT=$1
		;;
	  -t)
		DISPLAY_PARAMS=1
		;;
	  -V) shift; [ $# -ge 1 ] || usage
		OPENLDAP_VERSION=$1
		;;
	  *)
		usage
		;;
	esac
	shift
done

if [ $OPENLDAP_VERSION \> 2.1 -o $OPENLDAP_VERSION = 2.1 ]; then
	: ${SLAPD_DB:="bdb"}
else
	: ${SLAPD_DB:="ldbm"}
fi

: ${GFARM_LDAP:="$CONFIG_PREFIX/etc/gfarm-ldap"}
: ${SLAPD_CONF:="$GFARM_LDAP/slapd.conf"}
: ${LDAP_DATADIRECTORY:="$CONFIG_PREFIX/var/gfarm-ldap"}

: ${INITIAL_LDIF:="$GFARM_LDAP/initial.ldif"}

: ${GFARM_CONF_SCRIPT:="$GFARM_LDAP/config.script"}
: ${GFARM_CONF:="$CONFIG_PREFIX/etc/gfarm.conf"}

: ${ETC_INITD:="$CONFIG_PREFIX/etc/init.d"}
: ${VAR_RUND:="$CONFIG_PREFIX/var/run"}
: ${VAR_LOCKD:="$CONFIG_PREFIX/var/lock/subsys"}

: ${DO_NOT_START_SERVICE:="0"}

# Gfarm installation directory
prefix=@prefix@

SUFFIX="dc=`echo ${DOMAIN_NAME} | sed -ne 's/\./, dc=/pg'`"
ROOTDN="cn=root, ${SUFFIX}"
DC=`echo ${DOMAIN_NAME} | awk -F '.' '{print $1}'`
[ X"$SUFFIX" = X -o X"$ROOTDN" = X -o X"$DC" = X ] && ABORT

# -t option; display parameters
[ X$DISPLAY_PARAMS = X1 ] && display_params

#########################################################################

mkcnf_config_script()
{
	cat <<EOF
s/@config_gfarm_suffix@/$SUFFIX/
s/@config_gfarm_rootdn@/$ROOTDN/
s/@config_gfarm_dc@/$DC/
s,@config_gfarm_prefix@,@prefix@,
s,@config_gfarm_gfarm_config@,$GFARM_CONF,
s,@config_gfarm_slapd_hostname@,$SLAPD_HOSTNAME,
s,@config_gfarm_slapd_port@,$SLAPD_PORT,
s,@config_gfarm_slapd_config@,$SLAPD_CONF,
s,@config_gfarm_slapd_database@,$SLAPD_DB,
s,@config_gfarm_openldap_libexec@,$OPENLDAP_LIBEXEC,
s,@config_gfarm_openldap_etc@,$OPENLDAP_ETC,
s,@config_gfarm_ldap_directory@,$LDAP_DATADIRECTORY,
s,@config_gfarm_gfmd_port@,$GFMD_PORT,
s,@config_gfarm_gfmd_option@,"-f $GFARM_CONF",
s,@config_gfarm_gfsd_port@,$GFSD_PORT,
s,@config_gfarm_gfsd_option@,"-f $GFARM_CONF",
s,@config_gfarm_run_dir@,$VAR_RUND,
s,@config_gfarm_lock_dir@,$VAR_LOCKD,
EOF
}

mkcnf_initial_ldif()
{
	cat << initial_ldif_EOF
dn: $SUFFIX
objectclass: dcObject
objectclass: organization
objectclass: top
dc: $DC
o: Gfarm file system
initial_ldif_EOF
}

mkcnf_slapd_conf()
{
	if [ $OPENLDAP_VERSION \> 2.1 -o $OPENLDAP_VERSION = 2.1 ]; then
		SLAPD_CONF_IN=slapd.conf-2.1.in
	else
		SLAPD_CONF_IN=slapd.conf-2.0.in
	fi
	sed -f $GFARM_CONF_SCRIPT @datadir@/gfarm/config/$SLAPD_CONF_IN
}

mkcnf_dbconfig()
{
	cachesize=`
	    awk '$1 == "MemTotal:" {print int($2/2/8)*8*1024}' /proc/meminfo`
	[ -n "$cachesize" ] &&
	echo "set_cachesize 0 $cachesize 1"

	echo "set_flags DB_TXN_NOSYNC"
}

mkcnf_gfarm_conf()
{
	sed -f $GFARM_CONF_SCRIPT @datadir@/gfarm/config/gfarm.conf.in
}

mkscript_gfarm_slapd()
{
	sed -f $GFARM_CONF_SCRIPT @datadir@/gfarm/config/gfarm-slapd.in
}

mkscript_gfmd()
{
	sed -f $GFARM_CONF_SCRIPT @datadir@/gfarm/config/gfmd.in
}

mkcnf()
{
	[ $# -eq 2 ] && $1 > $2 && echo create $2
}

mkscript()
{
	[ $# -eq 2 ] && $1 > $2 && chmod +x $2 && echo create $2
}

#########################################################################

delete_file_or_directory()
{
	while [ $# -gt 0 ] ; do
		if [ -e $1 ]; then
			if [ X$FORCE = X0 ]; then
				ABORT "$PROGNAME: $1 already exist"
			else
				rm -rf $1
			fi
		fi
		shift
	done
}

delete_file_or_directory $LDAP_DATADIRECTORY $GFARM_CONF $ETC_INITD/gfarm-slapd

# make directory
create_directory()
{
	[ $# -gt 0 ] && mkdir -p $* && echo create $*
}

create_directory $LDAP_DATADIRECTORY ||
ABORT "$PROGNAME: mkdir $LDAP_DATADIRECTORY, failed"

mkdir_list=""
for x in $GFARM_LDAP $ETC_INITD $VAR_RUND $VAR_LOCKD; do
	if [ ! -d $x ] ; then
		rm -rf $x > /dev/null 2>&1
		mkdir_list="$mkdir_list $x"
	fi
done
[ -z "$mkdir_list" ] || create_directory $mkdir_list ||
ABORT "$PROGNAME: mkdir $mkdir_list, failed"

# create configuration file
mkcnf mkcnf_config_script $GFARM_CONF_SCRIPT ||
ABORT "$PROGNAME: cannot create configuration script"

mkcnf mkcnf_initial_ldif $INITIAL_LDIF &&
mkcnf mkcnf_slapd_conf $SLAPD_CONF &&
mkcnf mkcnf_gfarm_conf $GFARM_CONF ||
ABORT "$PROGNAME: cannot create configuration file"

# add initial data
if [ X"$SLAPD_DB" = Xbdb ]; then
	if [ ! -f $GFARM_LDAP/DB_CONFIG ]; then
		mkcnf mkcnf_dbconfig $GFARM_LDAP/DB_CONFIG ||
		ABORT "$PROGNAME: cannot create $GFARM_LDAP/DB_CONFIG"
	fi
	cp -a $GFARM_LDAP/DB_CONFIG $LDAP_DATADIRECTORY
fi
slapadd -f $SLAPD_CONF -l $INITIAL_LDIF && echo add initial metadata ||
ABORT "$PROGNAME: cannot add initial metadata"

# create run script for gfarm-slapd
mkscript mkscript_gfarm_slapd $ETC_INITD/gfarm-slapd ||
ABORT "$PROGNAME: cannot create $ETC_INITD/gfarm-slapd"

#
if [ X"$DO_NOT_START_SERVICE" = X1 ]; then
	echo "$PROGNAME success"
	exit 0
fi

if [ X`id -u` = X0 -a X$CONFIG_PREFIX = X ]; then
	chkconfig gfarm-slapd --add &&
	echo add gfarm-slapd service ||
	ABORT "$PROGNAME: cannot add gfarm-slapd service"
else
	echo add gfarm-slapd service: skipped
fi

if [ X`id -u` = X0 -a X$CONFIG_PREFIX = X ]; then
	service gfarm-slapd restart ||
	ABORT "$PROGNAME: cannot start gfarm-slapd"
else
	$ETC_INITD/gfarm-slapd restart ||
	ABORT "$PROGNAME: cannot start gfarm-slapd"
fi

if [ X`id -u` = X0 -a X$CONFIG_PREFIX = X ]; then
	service gfmd restart ||
	ABORT "$PROGNAME: cannot start gfmd"
else
	# create run script for gfmd
	mkscript mkscript_gfmd $ETC_INITD/gfmd ||
	ABORT "$PROGNAME: cannot create $ETC_INITD/gfmd"

	$ETC_INITD/gfmd restart ||
	ABORT "$PROGNAME: cannot start gfmd"
fi
error=$?

[ $error = 0 ] && echo "$PROGNAME success" || echo "$PROGNAME failure"
exit $error
