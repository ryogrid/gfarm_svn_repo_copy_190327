Gfarm システム ユーザーガイド

独立行政法人産業技術総合研究所
グリッド研究センター
2005 年 2 月 16 日


1. はじめに

1.1 本書の内容

本書は，Gfarm をはじめて使う人向けに，ユーザとして Gfarm の利用方法を
確認したり，サンプルプログラムを走らせて動作を把握したりするための手
順を記したものです．大規模並列ファイルシステム，Grid Datafarm 等に関
する基本的な概念については、関連する論文等を参照してください。
また，本書では UNIX ライクなオペレーティングシステムの通常の操作につい
ては説明しません．通常のファイルシステムにおけるファイルの取り扱いや各
種コマンドについては，マニュアル等を参照してください．RedHat Linux で
Gfarm の日本語マニュアルを読むには，環境変数 LANG を ja_JP.ujis に設定
してください．

なお，すでに Gfarm がインストールされ，適切に設定されていることを
前提としています．インストールや設定に関しては，Gfarm 配付パッケージ
内の INSTALL.ja, INSTALL.en を参照してください．

1.2 実験環境

本書では，以下のような環境を例に挙げて説明します．

    メタデータサーバ       : metaserver.example.com
    Gfarm インストール先   : /usr

コマンド実行例では，Gfarm を利用しようとするホスト(以下，クライアント
ホストと表記)で実行することを前提としています．ファイルシステムノード
で実行すると，説明している通りの動作にはなりません．クライアントホスト
で実行してください．

1.3 Gfarm のユーザ設定の確認

クライアントホストにおいて，ユーザが正しく Gfarm を利用できるよう設定
されていることを確認します．Gfarm の設定ファイルは %%SYSCONFDIR%%/gfarm.conf も
しくは ~/.gfarmrc です．これらのファイルが存在するかを確認します．

 % ls %%SYSCONFDIR%%/gfarm.conf
 % ls ~/.gfarmrc

これらのファイルが両方存在する場合は，~/.gfarmrc が優先されます．
どちらのファイルも存在しない場合，Gfarm を利用することができません．
管理者に相談してください．これらのファイルが存在し，正しく設定されてい
れば，Gfarm を利用することができます．ファイル内容の詳細については，
man gfarm.conf を参照してください．

2. 認証

Gfarm を利用するためには，まず最初に認証を行なう必要があります．以下
の三つの認証方式があり，インストールされている Gfarm の設定ファイルで
指定されます．

 (1) 共有秘密鍵認証方式
 (2) GSI (Grid Security Infrastructure) 認証方式
 (3) 認証のみに GSI を用い，それ以降の通信はデータに対する署名や暗号化
     を行わない方式

利用している Gfarm 環境がどの認証方式を採用しているか分からない場合は，
Gfarm 設定ファイル %%SYSCONFDIR%%/gfarm.conf を参照してください．
gfarm.conf の書式については，man gfarm.conf を参考にしてください．

2.1 共有秘密鍵方式の場合

共有秘密鍵方式は，ホームディレクトリに鍵ファイルを作成し，その内容で認
証を行う方式です．

2.1.1 ホームディレクトリが共有されている場合

ホームディレクトリが共有されている場合には，自動的に Gfarm の鍵ファイル
が作成されるため，何もする必要がありません．

ホームディレクトリは共有されているが更新に遅延がある等，鍵ファイルの自
動生成がうまくいかない場合は，以下の 2.1.1 節を参照して，鍵ファイルを
更新してください．

2.1.2 ホームディレクトリが共有されていない場合

鍵ファイル ~/.gfarm_shared_key を生成し、そのファイルを安全に全てのファ
イルシステムノードのホームディレクトリにコピーします．

 (1) 鍵ファイルの生成または更新

    以下のコマンドを実行します．

     % gfkey -f

    このコマンドを実行すると，ホームディレクトリに .gfarm_shared_key
    という名前の鍵ファイルが生成されます．-f オプションは，必ず新規の
    鍵を作成するオプションです．この鍵ファイルは，作成されてから 24 時
    間有効です．24 時間を越えて Gfarm を利用する場合は，鍵ファイルが無
    効になるまえに再度鍵ファイルを生成してください．
    -f オプションの代わりに -c オプションを使うと，すでに鍵ファイルが
    ある場合には何もせず，鍵ファイルがない場合だけ生成を行います．
    詳細は man gfkey を参照してください．

 (2) 鍵ファイルのコピー

    メタデータサーバおよびファイルシステムノードのホストすべてにコピー
    してください．たとえばシェルが bash の場合，以下のようにコマンドを
    実行します．

	% scp ~/.gfarm_shared_key metaserver.example.com:
				      ↑ メタデータサーバに鍵をコピー
	% for n in `gfhost` ; do scp ~/.gfarm_shared_key $n: ; done
                                      ↑ 利用可能なノードに鍵をコピー

2.2 GSI 認証方式の場合

GSI (Grid Security Infrastructure) 認証方式は，ユーザ証明書を認証局よ
り取得し，その代理証明書を作成することでシングルサインオンを実現する認
証方式です．

GSI 認証が有効になっている場合は，ユーザ代理証明書を作成することで認証
が完了します．
具体的には，以下のようにコマンドを実行します．

 % grid-proxy-init

このコマンドを実行すると，Grid Security Infrastructure における代理証明
書が作成され，認証が完了します．詳細は Grid Security Infrastructure や
Globus Toolkit に関する資料を参照してください．

3. [重要] ホームディレクトリの作成

Gfarm を利用する前に，ユーザのホームディレクトリを Gfarm ファイルシス
テムに作成する必要があります．

 % gfmkdir gfarm:~

4. Gfarm 環境の確認

Gfarm が正しく設定されているか，Gfarm ファイルシステムが正しく動作してい
るかを確認します．ユーザ環境で参照される設定ファイルの内容を確認します．

また，Gfarm のコマンドを使って各ノードの動作状況を確認します．次章のサ
ンプルプログラムを実行する前に，この確認を行って下さい．

※Gfarm のコマンドを使用する前に，Gfarm のコマンドが配置されているディ
レクトリを，必ず PATH 環境変数に追加しておいてください．

4.1 ファイルシステムの内容と並列コマンドの確認(gfls)

この後のサンプルの実行に必要な並列コマンドが Gfarm ファイルシステムに
登録されていることを確認します．gfls コマンドを使って，Gfarm ファイル
システムの内容を一覧表示することができます．

 % gfls -la
 drwxr-xr-x tatebe   *                 0 Feb 10 03:07 .
 drwxrwxrwx root     gfarm             0 Jan  1  1970 ..

gfls の詳細については man gfls を参照してください．

4.2 ファイルシステムノードの確認(gfhost)

Gfarm ファイルシステムを構成しているファイルシステムノードが正しく起動
しているかどうか，認証に成功するかどうかを確認します．以下のように
gfhost コマンドを使って，ファイルシステムノードの状況を調べます．

 % gfhost -l
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm01.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm02.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm03.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm04.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm05.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm06.example.com
 -.--/-.--/-.-- - i386-redhat8.0-linux 1 gfm07.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm08.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm09.example.com
 0.00/0.00/0.00 s i386-redhat8.0-linux 1 gfm10.example.com

ファイルシステムを構成するファイルシステムノードが一覧表示されれば，
Gfarm が正しく動作しています．このとき，各行の意味は以下の通りです．

 - 行頭の 3 つの数字は，そのノードのロードアベレージです．
 - ロードアベレージが -.-- という形式になっている行は，該当ノードの
   ファイルシステムノードに接続できないことを示します．おそらく該当
   ノードの gfsd が落ちています．
 - ロードアベレージの次にある一桁のカラムは，認証に用いられる方式を
   示します。ここで表示されている s は 共有秘密鍵認証方式を示します。
 - i386-redhat8.0-linux というカラムでは，該当ノードのアーキテクチャや
   OS が表示されます．
 - その次のカラムでは，該当ノードの CPU 数が表示されます．
 - 最後のカラムには，ノードの名前が表示されます．

gfhost コマンドをオプションなしで実行すると，利用可能なファイルシステム
ノードの一覧を表示します．gfm07.example.com は利用できませんので表示に
はふくまれません．

 % gfhost
 gfm01.example.com
 gfm02.example.com
 gfm03.example.com
 gfm04.example.com
 gfm05.example.com
 gfm06.example.com
 gfm08.example.com
 gfm09.example.com
 gfm10.example.com

4.3 メタデータサーバの確認

Gfarm ファイルシステムのメタデータサーバ(gfmd)が正しく起動されているか
どうかを確認します．オプションを指定せずに gfps コマンドを実行し，何も
表示されずに即座に終了すれば，メタデータサーバが正しく動作しています．

 % gfps

5. ファイルの操作

本章は Gfarm ファイルシステムのファイルを操作するためのコマンドにつ
いて説明します．手元にある通常のファイルシステム中のファイルを Gfarm
ファイルシステムにコピーしたり，Gfarm ファイルシステムの状態を調べたり
するコマンド等を実際に実行してみます．

5.1 通常ファイルを単一の Gfarm ファイルとして登録する

手元の通常ファイルシステムにあるファイルを，そのまま Gfarm ファイルシ
ステムに取り込んでみます．これには gfreg コマンドを使います．通常ファ
イル sample.file を gfarm:sample.file というような Gfarm ファイルとし
て登録するには，以下のようなコマンドを実行します．

 % gfreg sample.file gfarm:sample.file

このコマンドを実行すると，sample.file が Gfarm ファイルシステム中に作
成されます．gfls コマンドを使って，ファイルが作成されたことを確認して
みます．

 % gfls -l
 -rw-r--r-- tatebe   *              1206 Apr 16 13:48 sample.file

ファイルが作成されていることが分かります．このファイルの内容が正しく取
り込まれているかを確認してみるために，再び通常ファイルシステムに取り出
してみます．Gfarm ファイルシステムからファイル内容を取り出すには，
gfexport コマンドを使います．gfarm:sample.file の内容を sample.exported
というファイルに取り出すには，以下のコマンドを実行します．

 % gfexport gfarm:sample.file > sample.exported

gfexport コマンドは標準出力にファイルの内容を出力するので，これをリダイ
レクトして sample.exported ファイルに書き込んでいます．元のファイルとの
差分をとって，内容に変化がないことを確認します．

 % diff sample.file sample.exported

元のファイルと Gfarm ファイルシステムから取り出したファイルとの間には，
何も変化がないことが分かります．

上記の方法では，単一の通常ファイルを単一の Gfarm ファイルとして登録す
ることができますが，同時にいくつもの通常ファイルを登録することもできま
す．この場合，登録したい通常ファイルと，登録先に gfarm: などと Gfarm 
ディレクトリを指定します．file1, file2, file3 を一度に登録したい場合，
以下のような書式になります．

 % gfreg -I 0 -N 1 file1 file2 file3 gfarm:
 % gfls
 file1 file2 file3

5.2 複数の通常ファイルを一つの Gfarm ファイルとして登録する

1 つの Gfarm ファイルは，1 つ以上のファイル断片から構成されます．Gfarm
ファイルシステムでは，複数のファイル断片を複数のホスト(ファイルシステム
ノード)に分散して配置しておくことができ，これらのファイル断片は，Gfarm
ファイルシステム中では，すべての断片を連結した 1 つの Gfarm ファイルに見
えます．

通常のファイルを複数のファイル断片から構成される Gfarm ファイルとして
Gfarm ファイルシステム中に登録するには，gfreg コマンドを使って以下のよ
うな手順を実行します．

 (1) 通常ファイルを分割する

     Gfarm ファイルシステムに取り込みたいファイルを，通常のファイルシ
     ステム中で分割しておきます．どのようにファイルを分割するべきかは，
     アプリケーションに依存します．
     この例では，sample.file というファイルを split コマンドで分割して
     おきます．split コマンドは OS によって挙動が違うことがありますの
     で，詳細については man split を参照してください．

     % split -b 4096 sample.file sample.frags.
     % ls -l sample.frags.*
     -rw-r--r--   1 tatebe        4096 Apr 16 16:58 sample.frags.aa
     -rw-r--r--   1 tatebe        4096 Apr 16 16:58 sample.frags.ab
     -rw-r--r--   1 tatebe        4096 Apr 16 16:58 sample.frags.ac
     -rw-r--r--   1 tatebe        4096 Apr 16 16:58 sample.frags.ad
     -rw-r--r--   1 tatebe        4096 Apr 16 16:58 sample.frags.ae
     -rw-r--r--   1 tatebe        4096 Apr 16 16:58 sample.frags.af
     -rw-r--r--   1 tatebe         843 Apr 16 16:58 sample.frags.ag

     この場合，7 つのファイルに分割されています．これらの分割された
     ファイルを各々ファイル断片として Gfarm ファイルシステムに配置し，
     Gfarm ファイルを構成します．

 (2) 分割したファイルを各々 gfreg で登録する

     gfreg を使って，(1) で分割した 7 つのファイルを Gfarm ファイルシ
     ステムに取り込みます．以下のようなコマンドを実行します．

     % gfreg sample.frags.* gfarm:sample.file

     この場合，各ファイルはファイルシステムノードのロードアベレージに
     基づいて分散して配置されます．具体的には，ロードアベレージのもっ
     とも低いノードから 7ノードに登録されます．

     上記コマンドは，以下のようにも指定することができます．

     % gfreg -I 0 -N 7 sample.frags.aa gfarm:sample.file
     % gfreg -I 1 -N 7 sample.frags.ab gfarm:sample.file
     % gfreg -I 2 -N 7 sample.frags.ac gfarm:sample.file
     % gfreg -I 3 -N 7 sample.frags.ad gfarm:sample.file
     % gfreg -I 4 -N 7 sample.frags.ae gfarm:sample.file
     % gfreg -I 5 -N 7 sample.frags.af gfarm:sample.file
     % gfreg -I 6 -N 7 sample.frags.ag gfarm:sample.file

     このとき，各コマンドラインオプションの意味は以下の通りです．

     - "-I 数字"
       このコマンドで登録するファイルがいくつめのファイル断片かを指定し
       ます．

     - "-N 数字"
       登録するファイルが，合計いくつのファイル断片から構成されているの
       かを指定します．

     ロードアベレージによってファイルを分散するだけでなく，明示的にファ
     イルを配置することもできます．-h オプションで，各ファイルをどのノー
     ドに配置するかを指定します．上記の例は，例えば以下のようになります．

     % gfreg -I 0 -N 7 -h gfm01.example.com sample.frags.aa gfarm:sample.file
     % gfreg -I 1 -N 7 -h gfm02.example.com sample.frags.ab gfarm:sample.file
     % gfreg -I 2 -N 7 -h gfm03.example.com sample.frags.ac gfarm:sample.file
     % gfreg -I 3 -N 7 -h gfm04.example.com sample.frags.ad gfarm:sample.file
     % gfreg -I 4 -N 7 -h gfm05.example.com sample.frags.ae gfarm:sample.file
     % gfreg -I 5 -N 7 -h gfm06.example.com sample.frags.af gfarm:sample.file
     % gfreg -I 6 -N 7 -h gfm07.example.com sample.frags.ag gfarm:sample.file

     -h オプションでは，ファイル断片を配置したいファイルシステムノード
     のホスト名を指定します．あらかじめ gfhost などを使って，利用可能な
     ファイルシステムノードであることを確認して下さい．

     gfreg でファイル断片を登録する際の詳細については，man gfreg を参照し
     て下さい．

 (3) 正しく登録できたことを確認する

    gfls コマンドで，Gfarm ファイル gfarm:sample.file が登録されたこと
    を確認します．

    % gfls -l gfarm:sample.file
    -rw-r--r-- tatebe   *             25419 Apr 16 13:48 sample.file

    分割した sample.frags.* が，単一のファイル gfarm:sample.file として
    登録されたことが確認できます．

 (4) 正しく配置されたことを確認する

     gfwhere コマンドで，Gfarm ファイル gfarm:sample.file がどのように
     配置されているかを確認します．

     % gfwhere gfarm:sample.file
     0: gfm01.example.com
     1: gfm02.example.com
     2: gfm03.example.com
     3: gfm04.example.com
     4: gfm05.example.com
     5: gfm06.example.com
     6: gfm07.example.com

     gfarm:sample.file という単一ファイルに見えるものが，7 つの断片に
     分割され，各々が別のホスト上に配置されていることが確認できます．

 (5) ファイル全体を取り出す

     gfexport コマンドで単一の Gfarm ファイル gfarm:sample.file を取り
     出せます．以下の例では，gfarm:sample.file を 1 つの通常ファイルと
     して取り出し，元のファイルと比較しています．

     % gfexport gfarm:sample.file > sample.whole_gfarmfrags
     % diff sample.file sample.whole_gfarmfrags

     分割前のファイルと同一内容であることが確認できます．

 (6) ファイルの断片を取り出す

     gfexport コマンドを使って，Gfarm ファイルの断片を取り出すこともで
     きます．上記の例では Gfarm ファイル gfarm:sample.file は 7 つの断
     片から構成されていますが，2 番のファイル断片を取り出すには，以下の
     ようなコマンドを実行します．

     % gfexport -I 2 gfarm:sample.file > sample.frags.ac_exported

     -I オプションで取り出すべき断片のインデクス番号を指定します．断片
     の複製が複数ある場合は，自動的にロードアベレージにより特定のホスト
     にある断片が選ばれます．

     インデクス 2 は sample.frags.ac を登録したものですので，いま取り出
     した断片と sample.frags.ac とを比較してみます．

     % diff sample.frags.ac sample.frags.ac_exported

     登録前の断片と同一内容であることが確認できます．

     gfexport コマンドの詳細については，man gfexport を参照してください．

5.1 で説明したファイル取り込み方法は，1 つの通常ファイルを 1 つのファ
イル断片として Gfarm ファイルシステムに取り込んだものです．この場合は，
Gfarm ファイルは，1 つのファイル断片から構成される Gfarm ファイルとして
構成されていることになります．

テキストファイルや，固定長のバイナリファイルを断片化して登録するときは，
サンプルプログラムとして提供されている gfimport_text や gfimport_fixed
を使うのが容易です．gfimport_text や gfimport_fixed は，ユーザが分割の
方法を指定して，断片化と登録を行うサンプルのツールです．この 2 つのツー
ル以外の分割方法や，アプリケーション固有の分割を行いたい場合は，これら
のツールのソースを参照してください．

5.3 アプリケーションプログラムを登録する

アプリケーションプログラムを Gfarm ファイルシステムに登録して実行するこ
とができます．ここでは例として，/bin/echo コマンドを登録し，実行します．

 (1) /bin/echo コマンドの登録
     gfreg で /bin/echo を Gfarm ファイルシステムに登録します．

     % gfreg /bin/echo gfarm:~/echo

     実行するホストがファイルシステムノードではない場合は，登録したいファ
     イルシステムノードあるいは実行プログラムのアーキテクチャを指定する
     必要があります．ファイルシステムノードは -h オプションで指定し，アー
     キテクチャは -a オプションで指定します．

     % gfreg -h gfm01.example.com /bin/echo gfarm:~/echo
     % gfreg -a i386-redhat8.0-linux /bin/echo gfarm:~/echo

     ファイルシステムノードが複数のアーキテクチャで構成されている場合も，
     それぞれのアーキテクチャ毎にプログラムが登録されていれば，異なるアー
     キテクチャのノードで同じプログラムを実行することができます．

     いくつものコマンドを登録するには，以下のような書式が使えます．

     % gfreg executable1 executable2 executable3 gfarm:~

     gfls で正しく登録されていることが確認できます．

     % gfls -l gfarm:~/echo
     -rwxrwxr-x tatebe   *             11832 Apr  3 19:31 echo

     gfreg コマンドの詳細は man gfreg を参照してください．

 (2) コマンドの実行
     Gfarm ファイルシステムに登録したアプリケーションは，登録されてい
     るアーキテクチャのファイルシステムノードであれば，どこでも実行す
     ることができます．gfrun は，該当するファイルシステムノードで遠隔
     にアプリケーションを実行するコマンドです．以下は gfarm:~/echo が
     実行可能なファイルシステムノードのうち，最も CPU 負荷が軽いノード
     で実行する例です．

     % gfrun gfarm:~/echo Hello from \`hostname\`
     Hello from gfm02.example.com

     gfrun コマンドの詳細は man gfrun を参照してください．

5.4 Gfarm ファイルの複製を作る

Gfarm ファイルは，Gfarm ファイルシステム中に 1 つ以上の複製を持つこと
ができます．単に gfls しただけでは複製の存在は分かりませんが，gfwhere
コマンドを使うと，ファイルがいくつものファイルシステムノードに分散して
複製されていることがわかります．複製を作っておくことにより，耐故障性が
向上し，またアクセス集中による性能低下が防止されます．

ファイルの複製を作るには，gfrep コマンドを使います．以下のような手続き
で，gfarm:sample.file ファイルを複製し，複製されていることを確認するこ
とができます．

 (1) Gfarm ファイルの配置を確認する
     gfwhere コマンドで，Gfarm ファイル gfarm:sample.file がどのファイ
     ルシステムノードに存在しているのかを確認しておきます．

      % gfwhere gfarm:sample.file
      0: gfm01.example.com

     このことから，
      - このファイルがひとつのファイル断片から構成されていること
      - ファイル断片が gfm01.example.com というファイルシステムノード
        に存在していること
     が分かります．

 (2) Gfarm ファイルを複製する

     gfrep コマンドで，Gfarm ファイルの複製を作成します．作成したいファ
     イル複製の数を -N オプションで指定します．

      % gfrep -N 2 gfarm:sample.file

      この場合，ファイルの複製が作成されるファイルシステムノードは自動
      的に選択されます．あるいは，複製作成先を -d オプションで明示的に
      指定することもできます．

      % gfrep -d gfm02.example.com gfarm:sample.file

     複製を作成したいファイルが複数のファイル断片で構成されている場合
     は，複製作成先のファイルシステムノードをホスト定義ファイル，ある
     いはドメイン名で指定します．詳細は man gfrep を参照してください．

 (3) 複製が作成されていることを確認する

     (1) と同様にして，gfwhere コマンドで Gfarm ファイルの配置を確認しま
     す．

      % gfwhere gfarm:sample.file
      0: gfm01.example.com gfm02.example.com

     ファイル断片 0 が gfm01 だけでなく，gfm02 にも置かれていることが分
     かります．

gfrep コマンドは，ファイル全体を複製するだけでなく，ファイル中の特定の
ファイル断片だけを複製することもできます．特定の断片を複製するには，-I
オプションを用いて以下のようなコマンドを実行します．

 % gfrep -I 2 -d gfm04.example.com gfarm:sample.file

この場合，Gfarm ファイル gfarm:sample.file を構成する断片のうち，インデ
クス番号 2 のファイル断片を，gfm04.example.com に複製します．この例では
複製元のノードを指定していませんので，対象となるファイル断片をもつファ
イルシステムノードがロードアベレージにより自動的に選ばれます．複製元は
-s オプションにより特定することもできます．

gfrep コマンドの詳細については，man gfrep を参照してください．

5.5 Gfarm ファイルを削除する

Gfarm ファイルシステム中のファイルを削除するには，gfrm コマンドを使いま
す．gfarm:sample.file を削除する場合は，次のコマンドを実行します．

 % gfrm gfarm:sample.file

このコマンドを実行すると，Gfarm ファイルシステム中に存在する
gfarm:sample.file ファイルが削除されます．ファイル断片の複製が存在して
いた場合，すべての断片がすべてのファイルシステムノードから削除されます．
ファイルが削除されたことを gfls で確認してみます．

 % gfls -l

sample.file がファイルリストから削除されていることが分かります．

gfrm コマンドはファイル全体を削除するだけでなく，ファイル中の特定のファ
イル断片の特定のファイル複製だけを削除することもできます．

gfrm の詳細については，man gfrm を参照してください．

6. サンプルプログラムの実行

Gfarm を使ったサンプルプログラムの実行例を説明します．この章のサンプル
を実行する前に，前の章の説明にしたがって Gfarm が正しく動作しているこ
とを確認しておいてください．

6.1 テキストファイルの取り込み(gfimport_text)

通常のファイルシステムに存在するテキストファイルを Gfarm ファイルシステ
ムに取り込んでみます．このためには，gfimport_text コマンドを使います．
このコマンドは，通常のファイルを分割して断片化し，Gfarm ファイルシステ
ム上に登録するためのサンプルです．断片化の際，テキストの行の途中で分割
が起きないように処理を行っています．

 (1) ホスト定義ファイルを用意する
     ファイルを断片化して Gfarm ファイルシステムに登録する際，個々の
     ファイル断片をどのファイルシステムノードにファイル断片を配置する
     のかを指定する必要があります．この情報を書いたファイルをホスト定
     義ファイルと呼びます．ホスト定義ファイルを作成するには，以下のよ
     うなコマンドを実行します．

     % gfsched -N 8 > hostdef

     あるいは

     % gfhost > hostdef

     このコマンドで，hostdef という名前のホスト定義ファイルが生成
     されます．ホスト定義ファイルの書式については INSTALL.ja を参照し
     てください．
     本章では，ホスト定義ファイルとして上記の方法で生成した hostdef
     というファイルを使って説明します．
     ※この方法の他に，書式にしたがったホスト定義ファイルをエディタ等で
       作成する方法もありますが，該当ノードが利用できない場合に誤動作し，
       データが正しく取り扱えない危険性があります．

 (2) gfimport_text を実行する
     テキストファイル textfile.txt を Gfarm ファイルシステムに登録するた
     めには，以下のようなコマンドを実行します．

     % gfimport_text -H hostdef -o gfarm:textfile.txt textfile.txt

     この例では，手もとの通常ファイル textfile.txt を断片化し，Gfarm ファ
     イルシステム上に textfile.txt という名前(同名です)で取り込んでいま
     す．
     このときファイル断片は，hostdef というホスト定義ファイルに記述
     されたホスト上に配置されます．
     また，上記コマンド中の gfarm:textfile.txt は gfarm url と呼ばれ，
     Gfarm ファイルシステム中のファイルを表す表現です．

     gfimport_text コマンドが成功すると，特に何のメッセージも出力されず
     に終了します．

 (3) ファイルが Gfarm ファイルシステムに作られたかを gfls で確認する
     gfimport_text が成功したら，正しく Gfarm ファイルシステムに登録さ
     れていることを gfls で確認してみます．

     % gfls -l
     -rw-rw-r-- user      *             16710 Apr 10 16:19 textfile.txt

     手もとの通常ファイルと比べてファイルサイズ等が変わっていないことを
     確認できます．

 (4) ファイル断片の所在を gfwhere で確認する
     Gfarm ファイルシステム中に取り込んだテキストファイルは，実際には
     ファイルシステムノードに分散して存在しています．実際に取り込んだ
     ファイルがどのように分散しているのかを gfwhere コマンドで確認して
     みます．以下の例のように gfwhere コマンドを実行すると，
     gfarm:textfile.txt で表される Gfarm ファイルがどのように分散してい
     るかを表示します．

     % gfwhere gfarm:textfile.txt
     0: gfm01.example.com
     1: gfm02.example.com
     2: gfm03.example.com
     3: gfm04.example.com
     4: gfm05.example.com

     この出力例では，もとのファイル textfile.txt が 0 〜 4 の 5 つのファ
     イル断片に分割され，別のホストにそれぞれの断片が分散している様子が
     分かります．
     gfwhere コマンドの詳細については，man gfwhere を参照してください．

 (5) Gfarm ファイルシステムからファイルを取り出す
     断片化され，Gfarm ファイルシステムに登録されたファイルを，もう一度
     通常のファイルシステムに取り出してみます．このために gfexport コマ
     ンドを使います．gfexport コマンドは Gfarm ファイルシステムのファイ
     ル内容を標準出力に出力するので，これをリダイレクトして通常のファイ
     ルシステムにファイルを取り出せます．

     % gfexport gfarm:textfile.txt > exported-file.txt

     上の例では，Gfarm ファイルシステムから gfarm:textfile.txt の内容を
     取り出し，カレントディレクトリの exported-file.txt というファイルに
     書き込んでいます．gfexport の詳細については，man gfexport を参照し
     てください．

     diff コマンド等を用いて元のテキストファイルと比較してみると，内容に
     変化がないことがわかります．

     % diff textfile.txt exported-file.txt

6.2 固定長レコードファイルの取り込み(gfimport_fixed)

固定長レコードのバイナリファイルについても，6.1. と同様に Gfarm ファイル
システムに登録することができます．このためには gfimport_fixed コマンドを
使います．このコマンドは，通常のファイルを固定長で分割して断片化し，Gfarm
ファイルシステム上に登録するためのサンプルです．

 (1) ホスト定義ファイルを用意する
     5.1(1) と同様に，ホスト定義ファイル hostdef を用意します．

 (2) gfimport_fixed を実行する
     固定長レコードファイル testfile.bin を Gfarm ファイルシステムに取り
     込むためには，以下のようなコマンドを実行します．

     % gfimport_fixed -H hostdef -o gfarm:testfile.bin -l 100 testfile.bin

     この例では，手もとの通常ファイル testfile.bin を断片化し，Gfarm ファ
     イルシステム上に testfile.bin という名前(同名です)で取り込んでいます．
     ファイルの断片化に際して，レコードの大きさが 100 バイトごとであること
     を -l オプションで指定しています．これは，ファイル断片化を 100 バイト
     の整数倍の箇所で行うこととし，レコードの途中で分割されないことを意味
     します．gfimport_fixed の詳細は man gfimport_fixed を参照してください．

     gfimport_fixed コマンドが成功すると，特に何のメッセージも出力されず
     に終了します．

 (3) ファイルが Gfarm ファイルシステムに作られたかを gfls で確認する
     5.1(3) と同様に，gfls コマンドでファイルが取り込まれたことを確認して
     みます．

     % gfls -l
     -rw-rw-r-- user      *             16710 Apr 10 16:19 textfile.txt
     -rw-rw-r-- user      *             39167 Apr 10 16:19 testfile.bin

     手もとの通常ファイルと比べてファイルサイズ等が変わっていないことを
     確認できます．

 (4) ファイル断片の所在を gfwhere で確認する
     6.1.(4) と同様に，断片化されたファイルの実際の所在を確認してみます．

     % gfwhere gfarm:testfile.bin
     0: gfm01.example.com
     1: gfm02.example.com
     2: gfm03.example.com
     3: gfm04.example.com
     4: gfm05.example.com

     この出力例では，5 つのファイル断片が 5 つのホストに分散している様子
     が分かります．

 (5) Gfarm ファイルシステムからファイルを取り出す
     5.1(5) 同様，gfimport_fixed で Gfarm ファイルシステムに取り込んだ
     ファイルを通常のファイルとして取り出すことができます．gfexport コ
     マンドを以下のように実行します．

     % gfexport gfarm:testfile.bin > exported-file.bin

     この例では，gfarm:testfile.bin として取り込んだファイルを，カレント
     ディレクトリに exported-file.bin という名前で取り出しています．
     cmp コマンド等を用いて元のテキストファイルと比較してみると，内容に
     変化がないことが分かります．

     % cmp testfile.bin exported-file.bin

6.3 並列 grep を実行する(gfgrep)

ファイルアフィニティスケジューリングのサンプルとして，各ファイルシステ
ムノードで並列に grep を実行する gfgrep コマンドが提供されています．

このサンプルを実行する前に，grep したいファイルをあらかじめ Gfarm ファ
イルシステムに配置しておく必要があります．このとき，ファイルは断片化し
て複数のファイルシステムノードに配置しておくと，ファイル断片の分散に合
わせて grep の並列度も上がります．grep の結果は Gfarm ファイルに書き込
まれます．ここでは testfile.txt というファイルを gfarm:testfile.txt と
して，あらかじめ gfimport_text して Gfarm ファイルシステムに配置してい
ることを前提としています．

以下のような手順にしたがって gfgrep を実行してください．

 (1) gfgrep プログラムを登録

     gfgrep プログラムを Gfarm ファイルシステムに登録します．

      % gfreg /usr/bin/gfgrep gfarm:gfgrep

     詳しくは，5.3 節を参照してください．

 (2) gfgrep の実行

     並列プログラム gfgrep は，以下のように gfrun コマンドを使って実行
     します．

      % gfrun -G gfarm:testfile.txt gfarm:gfgrep -o gfarm:gfgrep.out 正規表現 gfarm:testfile.txt

     ここで実行されているコマンドは，以下のような意味になっています．

       - "-G gfarm:testfile.txt"
         gfrun コマンドに対する引数で，並列コマンドのスケジューリングを
         指定します．この例の指定方法では，Gfarm ファイル
         gfarm:testfile.txt のファイル断片を利用して，並列コマンドを起動
         すべきホストを決定しています．

       - "gfarm:gfgrep"
         gfrun コマンドに対する引数で，起動すべき並列コマンドが収められ
         ている Gfarm ファイルを指定します．この例では，Gfarm ファイル
         システム中の gfgrep を起動するよう指定しています．

       - "-o gfarm:gfgrep.out"
         gfgrep 並列コマンドに対する引数で，grep した結果を格納する Gfarm
         ファイルを指定します．この場合，gfarm:gfgrep.out ファイルに gfgrep
         の結果が格納されることになります．

       - 正規表現
         gfgrep 並列コマンドに対する引数で，grep したい表現を正規表現で
         指定します．

       - gfarm:testfile.txt
         gfgrep 並列コマンドに対する引数で，grep したい Gfarm ファイルを
         指定します．この例では，gfarm:testfile.txt を対象として gfgrep
         が実行されます．

     各コマンドのオプションの詳細については，man gfrun や man gfgrep を参
     照してください．

 (3) 結果の確認

     grep した結果が Gfarm ファイルに出力されていることを確認します．

      % gfls -l gfarm:gfgrep.out
      -rwxrwxr-x tatebe   *             13836 Apr 11 11:02 gfgrep.out

     Gfarm ファイルが生成されていることがわかります．このファイルを通常
     ファイルシステムに取り出して，内容を確認してみます．

      % gfexport gfarm:gfgrep.out > gfgrep.out
      % grep 正規表現 testfile.txt > grep.out
      % diff grep.out gfgrep.out

     結果が一致し，正しく grep が実行されたことがわかります．
