#!/bin/sh
#
# $Id: config-agent.in 3593 2007-02-28 22:49:16Z tatebe $

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/pkg/bin:/usr/pkg/sbin:/usr/local/bin:/usr/local/sbin:$PATH
export PATH

${DEBUG:="false"} && set -xu

# Gfarm installation directory
prefix="@prefix@"
sysconfdir="@sysconfdir@"
config_dir="@datadir@/gfarm/config"
globus_location="@globus_location@"

PROGNAME=`basename $0`

#
# check whether shell function does work or not.
#
BOURNE_SHELL="${BOURNE_SHELL-/bin/sh}"
if [ x"$1" = x--re-invoked ]; then
	# shell function works with this shell, remove --re-invoked option
	shift
elif "$BOURNE_SHELL" -c 'shellfunc() { exit 0; }; shellfunc' 2>/dev/null; then
	# shell function works
	:
else
	# Search other shell that supports shell functions
	for sh in ksh bash zsh sh ash bsh sh5; do
		set `IFS=:;
		 P="/bin:/usr/5bin:/usr/bin:/usr/local/bin:/usr/pkg/bin:$PATH";
		 echo $P`
		for dir
		do
			shell="$dir/$sh"
			if ( [ -f "$shell" ] || [ -f "$shell.exe" ] ) &&
				"$shell" -c 'shellfunc() { exit 0; };
					shellfunc' 2>/dev/null
			then
				BOURNE_SHELL="$shell" exec "$shell" "$0" \
					--re-invoked ${1+"$@"}
			fi
		done
	done
	echo "$PROGNAME: cannot find a shell which supports functions" >&2
	exit 1
fi

usage()
{
	echo >&2 "usage: $PROGNAME [--help] [--prefix prefix] [-t] [-f]"
	echo >&2 "	[-h hostname] [-p port]"
	exit 1
}

ABORT()
{
	[ $# -gt 0 ] && echo >&2 "${PROGNAME}: $@"
	echo >&2 "$PROGNAME failure"
	exit 1
}

sanity()
{
	rv=0
	if [ ! -x "$prefix/bin/gfhost" ]; then
		echo "WARNING: command not found: $prefix/bin/gfhost" >&2
		rv=1
	fi
	return $rv
}

display_params()
{
	echo "prefix [--prefix]: $CONFIG_PREFIX"
	echo "hostname     [-h]: $AGENT_HOSTNAME"
	echo "port         [-p]: $AGENT_PORT"

	sanity
	exit 0
}

while [ $# -gt 0 ] ; do
	case $1 in

	# set parameters
	  --prefix) shift; [ $# -ge 1 ] || usage
		CONFIG_PREFIX=$1
		;;
	  -p) shift; [ $# -ge 1 ] || usage
		AGENT_PORT=$1
		;;
	  -h) shift; [ $# -ge 1 ] || usage
		AGENT_HOSTNAME=$1
		;;

	# control options
	  --help)
		usage
		;;
	  -N)
		START_SERVICE=false
		;;
	  -f)
		FORCE=true
		;;
	  -t)
		DISPLAY_PARAMS=true
		;;
	  -*)
		usage
		;;
	  *)
		usage
		;;
	esac
	shift
done

. $config_dir/config-gfarm.sysdep

#
# default values
#

: ${CONFIG_PREFIX:=}
: ${AGENT_PORT:="603"}

# NOTE: $CONFIG_PREFIX needs to be set before calling sysdep_defaults
# sysdep_defaults must set: $RC_DIR
sysdep_defaults

: ${START_SERVICE:=true}
: ${FORCE:=false}
: ${DISPLAY_PARAMS:=false}

: ${RUN_DIR:="$CONFIG_PREFIX/var/run"}

if [ X"$CONFIG_PREFIX" != X ]; then
	: ${GFARM_CONF_DIR:="$CONFIG_PREFIX/etc"}
else
	: ${GFARM_CONF_DIR:="$sysconfdir"}
fi
: ${GFARM_CONF:="$GFARM_CONF_DIR/gfarm.conf"}

: ${FQ_HOSTNAME:=`fq_hostname`}

: ${AGENT_HOSTNAME:="$FQ_HOSTNAME"}
[ X"$AGENT_HOSTNAME" = X ] && ABORT 'cannot determine agent hostname'

: ${RC_AGENT_IN="$config_dir/gfarm_agent.in"}

# -t option; display parameters
$DISPLAY_PARAMS && display_params

sanity || ABORT "aborted"

#########################################################################

config()
{
	sed \
	-e "s|@config_gfarm_prefix@|$prefix|" \
	-e "s|@config_gfarm_globus_location@|${GLOBUS_LOCATION:-$globus_location}|" \
	-e "s|@config_gfarm_gfarm_config@|$GFARM_CONF|" \
	-e "s|@config_gfarm_agent_option@|-f $GFARM_CONF|" \
	-e "s|@config_gfarm_run_dir@|$RUN_DIR|" \
	${1+"$@"} | config_sysdep
}

mkcnf()
{
	# local out

	out=$1
	shift
	if ${1+"$@"} >$out; then
		echo created $out
	else
		ABORT "cannot create $out"
	fi
}

mkscript()
{
	mkcnf ${1+"$@"}
	chmod +x "$1" || ABORT "cannot chmod +x $1"
}

delete_file_or_directory()
{
	# local p

	for p
	do
		[ -d "$p" ] && rmdir "$p" > /dev/null 2>&1
		# [ -e "$p" ] isn't portable. not supported by Solaris /bin/sh
		if ls -1d "$p" >/dev/null 2>&1; then
			if $FORCE; then
				rm -rf "$p"
				echo removed "$p"
			else
				ABORT "$p already exist"
			fi
		fi
	done
}

create_directory()
{
	# local d

	for d
	do
		[ -d "$d" ] && continue
		if mkdir -p "$d"; then
			echo created "$d"
		else
			ABORT "mkdir -p $d, failed"
		fi
	done
}

#########################################################################

[ -f $GFARM_CONF ] || ABORT "$GFARM_CONF: no such file"

create_directory $RC_DIR $RUN_DIR

# create some directories
mkcnf_agent_sysdep

# create configuration files
grep -v "^agent" $GFARM_CONF > $GFARM_CONF.tmp &&
echo agent_serverhost $AGENT_HOSTNAME >> $GFARM_CONF.tmp &&
echo agent_serverport $AGENT_PORT >> $GFARM_CONF.tmp &&
mv $GFARM_CONF.tmp $GFARM_CONF &&
echo $GFARM_CONF: updated ||
ABORT "$GFARM_CONF: cannot append agent related statements"

# create run scripts
mkscript $RC_DIR/gfarm_agent	config "$RC_AGENT_IN"

if $START_SERVICE; then
	if [ -f $RUN_DIR/gfarm_agent.pid ];then ctl=restart; else ctl=start; fi
	service_add gfarm_agent && service_ctl gfarm_agent $ctl ||
		ABORT "failed to $ctl gfarm_agent"
fi
echo "$PROGNAME success"
exit 0
